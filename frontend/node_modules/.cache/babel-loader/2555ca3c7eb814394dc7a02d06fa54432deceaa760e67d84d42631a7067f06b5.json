{"ast":null,"code":"var _jsxFileName = \"Z:\\\\Documents\\\\IBA\\\\webdev\\\\leadership-training-app\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { api } from '../utils/api'; // Import only the api object\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Initialize auth state when the component mounts\n  useEffect(() => {\n    const initAuth = async () => {\n      if (token) {\n        try {\n          // Set auth header for all requests\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n          // Use direct API call to get user profile\n          const response = await api.get('/api/auth/profile');\n          setUser(response.data);\n          setIsAuthenticated(true);\n          console.log('Auth initialized successfully:', response.data);\n        } catch (error) {\n          console.error('Error initializing auth:', error);\n\n          // Clear auth data on error\n          localStorage.removeItem('token');\n          setToken(null);\n          setUser(null);\n          setIsAuthenticated(false);\n          delete api.defaults.headers.common['Authorization'];\n          if (error.response && error.response.status === 401) {\n            toast.error('Your session has expired. Please log in again.');\n          }\n        }\n      } else {\n        // Ensure auth header is cleared if no token\n        delete api.defaults.headers.common['Authorization'];\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, [token]);\n\n  // Register a new user\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const response = await api.post('/api/auth/register', userData);\n      toast.success('Registration successful! Please log in.');\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Registration error:', error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed';\n      toast.error(errorMessage);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login a user\n  const login = async credentials => {\n    try {\n      setLoading(true);\n      const response = await api.post('/api/auth/login', credentials);\n      const {\n        token: newToken,\n        user: userData\n      } = response.data;\n\n      // Save token to localStorage and set in axios headers\n      localStorage.setItem('token', newToken);\n      api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n\n      // Update state\n      setToken(newToken);\n      setUser(userData);\n      setIsAuthenticated(true);\n      console.log('Login successful:', userData);\n      toast.success('Login successful!');\n      return userData;\n    } catch (error) {\n      console.error('Login error:', error);\n      let errorMessage = 'Login failed';\n      if (error.response) {\n        var _error$response$data2;\n        errorMessage = ((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || `Login failed (${error.response.status})`;\n\n        // Add more specific error handling\n        if (error.response.status === 403) {\n          errorMessage = 'You do not have permission to access this system';\n        } else if (error.response.status === 401) {\n          errorMessage = 'Invalid username or password';\n        }\n      }\n      toast.error(errorMessage);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n\n    // Clear auth header\n    delete api.defaults.headers.common['Authorization'];\n\n    // Reset state\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n    console.log('Logged out successfully');\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    try {\n      setLoading(true);\n      const response = await api.put('/api/auth/profile', userData);\n      setUser(response.data);\n      toast.success('Profile updated successfully');\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Profile update error:', error);\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to update profile');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Expose methods and state\n  const value = {\n    user,\n    token,\n    loading,\n    isAuthenticated,\n    register,\n    login,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"4jGsX1weFgzNFnEaU+BsHhNEO2Q=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","isAuthenticated","setIsAuthenticated","initAuth","defaults","headers","common","response","get","data","console","log","error","removeItem","status","register","userData","post","success","_error$response","_error$response$data","errorMessage","message","login","credentials","newToken","setItem","_error$response$data2","logout","updateProfile","put","_error$response2","_error$response2$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["Z:/Documents/IBA/webdev/leadership-training-app/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { api } from '../utils/api'; // Import only the api object\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Initialize auth state when the component mounts\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      if (token) {\r\n        try {\r\n          // Set auth header for all requests\r\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n          \r\n          // Use direct API call to get user profile\r\n          const response = await api.get('/api/auth/profile');\r\n          \r\n          setUser(response.data);\r\n          setIsAuthenticated(true);\r\n          \r\n          console.log('Auth initialized successfully:', response.data);\r\n        } catch (error) {\r\n          console.error('Error initializing auth:', error);\r\n          \r\n          // Clear auth data on error\r\n          localStorage.removeItem('token');\r\n          setToken(null);\r\n          setUser(null);\r\n          setIsAuthenticated(false);\r\n          delete api.defaults.headers.common['Authorization'];\r\n          \r\n          if (error.response && error.response.status === 401) {\r\n            toast.error('Your session has expired. Please log in again.');\r\n          }\r\n        }\r\n      } else {\r\n        // Ensure auth header is cleared if no token\r\n        delete api.defaults.headers.common['Authorization'];\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    initAuth();\r\n  }, [token]);\r\n\r\n  // Register a new user\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.post('/api/auth/register', userData);\r\n      toast.success('Registration successful! Please log in.');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      const errorMessage = error.response?.data?.message || 'Registration failed';\r\n      toast.error(errorMessage);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Login a user\r\n  const login = async (credentials) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.post('/api/auth/login', credentials);\r\n      const { token: newToken, user: userData } = response.data;\r\n      \r\n      // Save token to localStorage and set in axios headers\r\n      localStorage.setItem('token', newToken);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\r\n      \r\n      // Update state\r\n      setToken(newToken);\r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      \r\n      console.log('Login successful:', userData);\r\n      \r\n      toast.success('Login successful!');\r\n      return userData;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      let errorMessage = 'Login failed';\r\n      \r\n      if (error.response) {\r\n        errorMessage = error.response.data?.message || `Login failed (${error.response.status})`;\r\n        \r\n        // Add more specific error handling\r\n        if (error.response.status === 403) {\r\n          errorMessage = 'You do not have permission to access this system';\r\n        } else if (error.response.status === 401) {\r\n          errorMessage = 'Invalid username or password';\r\n        }\r\n      }\r\n      \r\n      toast.error(errorMessage);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    // Remove token from localStorage\r\n    localStorage.removeItem('token');\r\n    \r\n    // Clear auth header\r\n    delete api.defaults.headers.common['Authorization'];\r\n    \r\n    // Reset state\r\n    setToken(null);\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    \r\n    console.log('Logged out successfully');\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.put('/api/auth/profile', userData);\r\n      setUser(response.data);\r\n      toast.success('Profile updated successfully');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Profile update error:', error);\r\n      toast.error(error.response?.data?.message || 'Failed to update profile');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Expose methods and state\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    isAuthenticated,\r\n    register,\r\n    login,\r\n    logout,\r\n    updateProfile\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}