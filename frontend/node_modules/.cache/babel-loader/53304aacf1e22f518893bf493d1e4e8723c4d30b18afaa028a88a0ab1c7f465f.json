{"ast":null,"code":"var _jsxFileName = \"Z:\\\\Documents\\\\IBA\\\\webdev\\\\leadership-training-app\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n// Import specifically the named export 'api' instead of the default export\nimport apiService, { api } from '../../utils/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Initialize auth state when the component mounts\n  useEffect(() => {\n    const initAuth = async () => {\n      if (token) {\n        try {\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          const response = await api.get('/api/auth/profile');\n          setUser(response.data);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Error initializing auth:', error);\n          localStorage.removeItem('token');\n          setToken(null);\n          setUser(null);\n          setIsAuthenticated(false);\n          delete api.defaults.headers.common['Authorization'];\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, [token]);\n\n  // Register a new user\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const response = await api.post('/api/auth/register', userData);\n      toast.success('Registration successful! Please log in.');\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login a user\n  const login = async credentials => {\n    try {\n      setLoading(true);\n      // Use the axios instance directly\n      const response = await api.post('/api/auth/login', credentials);\n      const {\n        token: newToken,\n        user: userData\n      } = response.data;\n\n      // Save token to localStorage and set in axios headers\n      localStorage.setItem('token', newToken);\n      api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n\n      // Update state\n      setToken(newToken);\n      setUser(userData);\n      setIsAuthenticated(true);\n      toast.success('Login successful!');\n      return userData;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout a user\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n    toast.info('Logged out successfully');\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    try {\n      setLoading(true);\n      const response = await api.put('/api/auth/profile', userData);\n      setUser(response.data);\n      toast.success('Profile updated successfully');\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      toast.error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to update profile');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    isAuthenticated,\n    register,\n    login,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"4jGsX1weFgzNFnEaU+BsHhNEO2Q=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","apiService","api","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","isAuthenticated","setIsAuthenticated","initAuth","defaults","headers","common","response","get","data","error","console","removeItem","register","userData","post","success","_error$response","_error$response$data","message","login","credentials","newToken","setItem","_error$response2","_error$response2$data","logout","info","updateProfile","put","_error$response3","_error$response3$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["Z:/Documents/IBA/webdev/leadership-training-app/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n// Import specifically the named export 'api' instead of the default export\r\nimport apiService, { api } from '../../utils/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Initialize auth state when the component mounts\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      if (token) {\r\n        try {\r\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n          const response = await api.get('/api/auth/profile');\r\n          setUser(response.data);\r\n          setIsAuthenticated(true);\r\n        } catch (error) {\r\n          console.error('Error initializing auth:', error);\r\n          localStorage.removeItem('token');\r\n          setToken(null);\r\n          setUser(null);\r\n          setIsAuthenticated(false);\r\n          delete api.defaults.headers.common['Authorization'];\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    initAuth();\r\n  }, [token]);\r\n\r\n  // Register a new user\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.post('/api/auth/register', userData);\r\n      toast.success('Registration successful! Please log in.');\r\n      return response.data;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.message || 'Registration failed');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Login a user\r\n  const login = async (credentials) => {\r\n    try {\r\n      setLoading(true);\r\n      // Use the axios instance directly\r\n      const response = await api.post('/api/auth/login', credentials);\r\n      const { token: newToken, user: userData } = response.data;\r\n      \r\n      // Save token to localStorage and set in axios headers\r\n      localStorage.setItem('token', newToken);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\r\n      \r\n      // Update state\r\n      setToken(newToken);\r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      \r\n      toast.success('Login successful!');\r\n      return userData;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.message || 'Login failed');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout a user\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    delete api.defaults.headers.common['Authorization'];\r\n    setToken(null);\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    toast.info('Logged out successfully');\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.put('/api/auth/profile', userData);\r\n      setUser(response.data);\r\n      toast.success('Profile updated successfully');\r\n      return response.data;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.message || 'Failed to update profile');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    isAuthenticated,\r\n    register,\r\n    login,\r\n    logout,\r\n    updateProfile\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}