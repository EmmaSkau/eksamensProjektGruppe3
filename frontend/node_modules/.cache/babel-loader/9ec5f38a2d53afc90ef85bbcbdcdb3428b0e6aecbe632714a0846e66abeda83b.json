{"ast":null,"code":"var _jsxFileName = \"Z:\\\\Documents\\\\IBA\\\\webdev\\\\leadership-training-app\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport authService from '../utils/authService';\nimport { api } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Initialize auth state when the component mounts\n  useEffect(() => {\n    const initAuth = async () => {\n      if (authService.getToken()) {\n        try {\n          // Validate the token and get user profile\n          const userData = await authService.getProfile();\n          setUser(userData);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Error initializing auth:', error);\n          // Clear auth data on error\n          authService.logout();\n          setUser(null);\n          setIsAuthenticated(false);\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n\n  // Register a new user\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const response = await authService.register(userData);\n      toast.success('Registrering gennemført! Log venligst ind.');\n      return response;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registrering fejlede');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login a user\n  const login = async credentials => {\n    try {\n      setLoading(true);\n      const userData = await authService.login(credentials);\n\n      // Update state\n      setUser(userData);\n      setIsAuthenticated(true);\n      toast.success('Login gennemført!');\n      return userData;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login fejlede');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout the user\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n    setIsAuthenticated(false);\n    toast.info('Du er nu logget ud');\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    try {\n      setLoading(true);\n      const response = await api.put('/api/auth/profile', userData);\n      setUser(response.data);\n      // Update stored user info\n      authService.setUserInfo(response.data);\n      toast.success('Profil opdateret');\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      toast.error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Fejl ved opdatering af profil');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check if user has a specific role\n  const hasRole = role => {\n    return user && user.role === role;\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    register,\n    login,\n    logout,\n    updateProfile,\n    hasRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","toast","authService","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","initAuth","getToken","userData","getProfile","error","console","logout","register","response","success","_error$response","_error$response$data","data","message","login","credentials","_error$response2","_error$response2$data","info","updateProfile","put","setUserInfo","_error$response3","_error$response3$data","hasRole","role","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["Z:/Documents/IBA/webdev/leadership-training-app/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport authService from '../utils/authService';\r\nimport { api } from '../utils/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Initialize auth state when the component mounts\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      if (authService.getToken()) {\r\n        try {\r\n          // Validate the token and get user profile\r\n          const userData = await authService.getProfile();\r\n          setUser(userData);\r\n          setIsAuthenticated(true);\r\n        } catch (error) {\r\n          console.error('Error initializing auth:', error);\r\n          // Clear auth data on error\r\n          authService.logout();\r\n          setUser(null);\r\n          setIsAuthenticated(false);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  // Register a new user\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await authService.register(userData);\r\n      toast.success('Registrering gennemført! Log venligst ind.');\r\n      return response;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.message || 'Registrering fejlede');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Login a user\r\n  const login = async (credentials) => {\r\n    try {\r\n      setLoading(true);\r\n      const userData = await authService.login(credentials);\r\n      \r\n      // Update state\r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      \r\n      toast.success('Login gennemført!');\r\n      return userData;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.message || 'Login fejlede');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout the user\r\n  const logout = () => {\r\n    authService.logout();\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    toast.info('Du er nu logget ud');\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.put('/api/auth/profile', userData);\r\n      setUser(response.data);\r\n      // Update stored user info\r\n      authService.setUserInfo(response.data);\r\n      toast.success('Profil opdateret');\r\n      return response.data;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.message || 'Fejl ved opdatering af profil');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Check if user has a specific role\r\n  const hasRole = (role) => {\r\n    return user && user.role === role;\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    isAuthenticated,\r\n    register,\r\n    login,\r\n    logout,\r\n    updateProfile,\r\n    hasRole\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}