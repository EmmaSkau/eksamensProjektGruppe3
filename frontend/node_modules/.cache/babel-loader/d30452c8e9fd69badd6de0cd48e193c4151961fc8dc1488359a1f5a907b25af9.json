{"ast":null,"code":"import axios from 'axios';\n\n// Create an axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to attach the auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Add a response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  // Handle unauthorized errors (401) by redirecting to login\n  if (error.response && error.response.status === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// API methods for various entities\nconst apiService = {\n  // Auth endpoints\n  auth: {\n    register: userData => api.post('/api/auth/register', userData),\n    login: credentials => api.post('/api/auth/login', credentials),\n    getProfile: () => api.get('/api/auth/profile'),\n    updateProfile: userData => api.put('/api/auth/profile', userData)\n  },\n  // Game endpoints\n  games: {\n    create: gameData => api.post('/api/games', gameData),\n    getAll: () => api.get('/api/games'),\n    getById: id => api.get(`/api/games/${id}`),\n    update: (id, gameData) => api.put(`/api/games/${id}`, gameData),\n    delete: id => api.delete(`/api/games/${id}`),\n    join: accessCode => api.post('/api/games/join', {\n      accessCode\n    })\n  },\n  // Team endpoints\n  teams: {\n    create: teamData => api.post('/api/teams', teamData),\n    getAll: () => api.get('/api/teams'),\n    getById: id => api.get(`/api/teams/${id}`),\n    update: (id, teamData) => api.put(`/api/teams/${id}`, teamData),\n    delete: id => api.delete(`/api/teams/${id}`),\n    join: id => api.post(`/api/teams/${id}/join`),\n    getByGame: gameId => api.get(`/api/games/${gameId}/teams`)\n  },\n  // Task endpoints\n  tasks: {\n    create: taskData => api.post('/api/tasks', taskData),\n    getAll: () => api.get('/api/tasks'),\n    getById: id => api.get(`/api/tasks/${id}`),\n    update: (id, taskData) => api.put(`/api/tasks/${id}`, taskData),\n    delete: id => api.delete(`/api/tasks/${id}`),\n    getByGame: gameId => api.get(`/api/games/${gameId}/tasks`)\n  },\n  // Submission endpoints\n  submissions: {\n    create: submissionData => api.post('/api/submissions', submissionData),\n    getAll: () => api.get('/api/submissions'),\n    getById: id => api.get(`/api/submissions/${id}`),\n    update: (id, submissionData) => api.put(`/api/submissions/${id}`, submissionData),\n    getByTeam: teamId => api.get(`/api/teams/${teamId}/submissions`),\n    createWithFile: (submissionData, file) => {\n      const formData = new FormData();\n\n      // Append file if provided\n      if (file) {\n        formData.append('file', file);\n      }\n\n      // Append other submission data\n      Object.keys(submissionData).forEach(key => {\n        formData.append(key, submissionData[key]);\n      });\n      return api.post('/api/submissions', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n    }\n  },\n  // Reflection endpoints\n  reflections: {\n    create: reflectionData => api.post('/api/reflections', reflectionData),\n    getAll: () => api.get('/api/reflections'),\n    getById: id => api.get(`/api/reflections/${id}`),\n    getByGame: gameId => api.get(`/api/games/${gameId}/reflections`)\n  },\n  // Admin endpoints\n  admin: {\n    getUsers: () => api.get('/api/admin/users'),\n    updateUser: (id, userData) => api.put(`/api/admin/users/${id}`, userData),\n    getStats: () => api.get('/api/admin/stats'),\n    exportGame: gameId => api.get(`/api/admin/export/games/${gameId}`, {\n      responseType: 'blob'\n    })\n  }\n};\nexport default apiService;\nexport { api };","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","removeItem","window","location","href","apiService","auth","register","userData","post","login","credentials","getProfile","get","updateProfile","put","games","gameData","getAll","getById","id","update","delete","join","accessCode","teams","teamData","getByGame","gameId","tasks","taskData","submissions","submissionData","getByTeam","teamId","createWithFile","file","formData","FormData","append","Object","keys","forEach","key","reflections","reflectionData","admin","getUsers","updateUser","getStats","exportGame","responseType"],"sources":["Z:/Documents/IBA/webdev/leadership-training-app/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create an axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Add a request interceptor to attach the auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Add a response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    // Handle unauthorized errors (401) by redirecting to login\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API methods for various entities\r\nconst apiService = {\r\n  // Auth endpoints\r\n  auth: {\r\n    register: (userData) => api.post('/api/auth/register', userData),\r\n    login: (credentials) => api.post('/api/auth/login', credentials),\r\n    getProfile: () => api.get('/api/auth/profile'),\r\n    updateProfile: (userData) => api.put('/api/auth/profile', userData)\r\n  },\r\n  \r\n  // Game endpoints\r\n  games: {\r\n    create: (gameData) => api.post('/api/games', gameData),\r\n    getAll: () => api.get('/api/games'),\r\n    getById: (id) => api.get(`/api/games/${id}`),\r\n    update: (id, gameData) => api.put(`/api/games/${id}`, gameData),\r\n    delete: (id) => api.delete(`/api/games/${id}`),\r\n    join: (accessCode) => api.post('/api/games/join', { accessCode })\r\n  },\r\n  \r\n  // Team endpoints\r\n  teams: {\r\n    create: (teamData) => api.post('/api/teams', teamData),\r\n    getAll: () => api.get('/api/teams'),\r\n    getById: (id) => api.get(`/api/teams/${id}`),\r\n    update: (id, teamData) => api.put(`/api/teams/${id}`, teamData),\r\n    delete: (id) => api.delete(`/api/teams/${id}`),\r\n    join: (id) => api.post(`/api/teams/${id}/join`),\r\n    getByGame: (gameId) => api.get(`/api/games/${gameId}/teams`)\r\n  },\r\n  \r\n  // Task endpoints\r\n  tasks: {\r\n    create: (taskData) => api.post('/api/tasks', taskData),\r\n    getAll: () => api.get('/api/tasks'),\r\n    getById: (id) => api.get(`/api/tasks/${id}`),\r\n    update: (id, taskData) => api.put(`/api/tasks/${id}`, taskData),\r\n    delete: (id) => api.delete(`/api/tasks/${id}`),\r\n    getByGame: (gameId) => api.get(`/api/games/${gameId}/tasks`)\r\n  },\r\n  \r\n  // Submission endpoints\r\n  submissions: {\r\n    create: (submissionData) => api.post('/api/submissions', submissionData),\r\n    getAll: () => api.get('/api/submissions'),\r\n    getById: (id) => api.get(`/api/submissions/${id}`),\r\n    update: (id, submissionData) => api.put(`/api/submissions/${id}`, submissionData),\r\n    getByTeam: (teamId) => api.get(`/api/teams/${teamId}/submissions`),\r\n    createWithFile: (submissionData, file) => {\r\n      const formData = new FormData();\r\n      \r\n      // Append file if provided\r\n      if (file) {\r\n        formData.append('file', file);\r\n      }\r\n      \r\n      // Append other submission data\r\n      Object.keys(submissionData).forEach(key => {\r\n        formData.append(key, submissionData[key]);\r\n      });\r\n      \r\n      return api.post('/api/submissions', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n    }\r\n  },\r\n  \r\n  // Reflection endpoints\r\n  reflections: {\r\n    create: (reflectionData) => api.post('/api/reflections', reflectionData),\r\n    getAll: () => api.get('/api/reflections'),\r\n    getById: (id) => api.get(`/api/reflections/${id}`),\r\n    getByGame: (gameId) => api.get(`/api/games/${gameId}/reflections`)\r\n  },\r\n  \r\n  // Admin endpoints\r\n  admin: {\r\n    getUsers: () => api.get('/api/admin/users'),\r\n    updateUser: (id, userData) => api.put(`/api/admin/users/${id}`, userData),\r\n    getStats: () => api.get('/api/admin/stats'),\r\n    exportGame: (gameId) => api.get(`/api/admin/export/games/${gameId}`, {\r\n      responseType: 'blob'\r\n    })\r\n  }\r\n};\r\n\r\nexport default apiService;\r\nexport { api };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}